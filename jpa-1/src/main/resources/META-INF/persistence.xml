<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0"
             xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">


    <persistence-unit name="jpa-1" transaction-type="RESOURCE_LOCAL">
        <!--配置使用什么 ORM 产品来作为 JPA 的实现-->
        <!--如果项目中只有一个 JPA 的实现产品， 则可以不用配置-->
        <provider>org.hibernate.ejb.HibernatePersistence</provider>

        <!--添加持久化类-->
        <class>com.customer.jpa.entities.Customer</class>

        <!--
		配置二级缓存的策略
		ALL：所有的实体类都被缓存
		NONE：所有的实体类都不被缓存.
		ENABLE_SELECTIVE：标识 @Cacheable(true) 注解的实体类将被缓存
		DISABLE_SELECTIVE：缓存除标识 @Cacheable(false) 以外的所有实体类
		UNSPECIFIED：默认值，JPA 产品默认值将被使用
		-->
        <!--要开启二级缓存，需要使用 shared-cache-mode 来配置-->
        <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>

        <properties>
            <!--配置数据库连接属性-->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="root"/>
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:mysql://localhost:3306/jpa?useUnicode=true&amp;characterEncoding=utf8"/>

            <!--配置 JPA 实现产品的基本属性 即 Hibernate 的基本属性-->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.hbm2ddl.auto" value="update"/>

            <!-- 配置 Hibernate 二级缓存相关 -->
            <property name="hibernate.cache.use_second_level_cache" value="true"/>
            <property name="hibernate.cache.region.factory_class"
                      value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/>
            <property name="hibernate.cache.use_query_cache" value="true"/>
        </properties>
    </persistence-unit>
</persistence>
